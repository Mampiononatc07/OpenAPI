openapi: 3.0.3
info:
  title: Onboarding API
  description: |-
   STD22035
  contact: 
    email: hei.mampionona@gmail.com
  license:
    name: HERINJAKA Mampionona
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.2.0
servers:
  - url: https://STD22035
tags:
  - name: Status
    description: Everything about your Status
paths:
  /Status:
    get:
      tags:
        - Status
      summary: Get status
      description: Get status description
      operationId: Status
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered 
          required: false
          explode: true
          schema:
            type: string
            default: available
            enum:
              - available
              - pending
              - sold
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Status'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Status'
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /Status/uploadStatus:
    post:
      tags:
        - Status
      summary: uploads an status
      description: ''
      operationId: uploadFile
      parameters:
        - name: statusId
          in: path
          description: ID of status to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - petstore_auth:
            - write:pets
            - read:pets
components:
  schemas:
    Status:
      required:
        - id
        - name
        - birthDate
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Mampionona
        birthDate:
          type: string
          format: birthDate
          example: 07-12-2000
      xml:
        name: Status
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Status:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Status'
        application/xml:
          schema:
            $ref: '#/components/schemas/Status'

  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header